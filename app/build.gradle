apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "example.multiinstrumentation"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
}

task jacocoReport(type: JacocoReport, dependsOn: 'connectedAndroidTestDebug') {
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    reports {
        xml.enabled = false
        html.enabled = true
    }

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: [
                    '**/R*.class',
                    '**/BuildConfig*'
            ]
    )

    classDirectories = classDirectories + fileTree(
            dir: '../mylibrary/build/intermediates/classes/debug',
            excludes: [
                    '**/R*.class',
                    '**/BuildConfig*'
            ]
    )

    sourceDirectories = fileTree(dir: 'src/main/java') + fileTree(dir: '../mylibrary/src/main/java')
    executionData = files('build/outputs/code-coverage/connected/coverage.ec')

    // What's in there?
    println("---------- Discovered files -----------")
    classDirectories.each {File file ->
        println file.absolutePath
    }
    sourceDirectories.each {File file ->
        println file.absolutePath
    }
    println("---------- Discovered files END -------")
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    debugCompile project(path: ':mylibrary', configuration: 'debug')
}
